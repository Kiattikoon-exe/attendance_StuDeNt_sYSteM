<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />

  <title>Users Management</title>
  
  <link rel="stylesheet" href="css/bootstrap.min.css">
  <!-- <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous"> -->
  <style>
    .user-container {
      display: flex;
      flex-direction: column;
      margin: 10px;
    }

    .user-item {
      border: 1px solid #ff0000;
      padding: 10px;
      margin: 5px 0;
      display: flex;
      justify-content: space-between;
    }

    .user-actions button {
      margin-left: 5px;
    }
  </style>
</head>

<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container-fluid">
      <a class="navbar-brand" href="#">Navbar</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
          <li class="nav-item">
            <a class="nav-link active" aria-current="page" href="#">Home</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">Link</a>
          </li>
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
              Dropdown
            </a>
            <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
              <li><a class="dropdown-item" href="#">Action</a></li>
              <li><a class="dropdown-item" href="#">Another action</a></li>
              <li><hr class="dropdown-divider"></li>
              <li><a class="dropdown-item" href="#">Something else here</a></li>
            </ul>
          </li>
          <li class="nav-item">
            <a class="nav-link disabled" href="#" tabindex="-1" aria-disabled="true">Disabled</a>
          </li>
        </ul>
        <form class="d-flex">
          <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
          <button class="btn btn-outline-success" type="submit">Search</button>
        </form>
      </div>
    </div>
  </nav>

  <h1>Users Management</h1>

  <div id="user-list" class="user-container"></div>
  <div id="teacher-list" class="user-container"></div>

  <h2>Add New User</h2>
  
  <div class="container">
    <form id="user-form">
      <div class="container">
        <div class="row g-3">

          <div class="md-6">
            <input type="text" class="form-control" placeholder="firstname" aria-label=" fname" id="firstname" required>
          </div>

          <div class="md-6">
            <input type="text" class="form-control" placeholder="lastname" aria-label=" lname" id="lastname" required>
          </div>

          <div class="md-6">
            <input type="email" class="form-control" placeholder="email@email" aria-label="email" id="email" required>
          </div>

          <div class="md-6">
            <input type="text" class="form-control" placeholder="password" aria-label=" password" id="pwd" required>
          </div>
      </div>

      <br><br>

      <button type="submit" class="btn btn-primary">Add User</button>
      <a href="/showlist">sdasd</a>
      <a href="/rollCallStd">rollcall</a>
      <a href="/teacherSys">teacher</a>
      
     
    </form>
  </div>

  

  <script>
    const userList = document.getElementById("user-list");
    const teaList = document.getElementById("teacher-list");
    const userForm = document.getElementById("user-form");

    // Fetch users and display
    async function fetchUsers() {
      const response = await fetch("/users");
      const users = await response.json();
      teaList.innerHTML = "";
      users.forEach((teacher) => {
        const userDiv = document.createElement("div");
        userDiv.classList.add("user-item");
        userDiv.innerHTML = `
                    <span>${teacher.firstname} ${teacher.lastname} ${teacher.pwd} (${teacher.email})</span>
                    <div class="user-actions">
                    <button onclick="updateUser(${teacher.id}, '${teacher.firstname}','${teacher.lastname}','${teacher.email}','${teacher.pwd}')">Update</button>
                    <button onclick="deleteUser(${teacher.id})">Delete</button>
                    </div>`;
        teaList.appendChild(userDiv);
      });
    }

    function showCustomAlert(message) {
    // Create the alert div
    const alertDiv = document.createElement("div");
    alertDiv.textContent = message;
    alertDiv.style.position = "fixed";
    alertDiv.style.top = "10px";
    alertDiv.style.left = "50%";
    alertDiv.style.transform = "translateX(-50%)";
    alertDiv.style.backgroundColor = "yellow";
    alertDiv.style.padding = "10px 20px";
    alertDiv.style.border = "1px solid black";
    alertDiv.style.zIndex = "9999";
    alertDiv.style.fontSize = "16px";

    // Append it to the body
    document.body.appendChild(alertDiv);

    // Remove the alert after 3 seconds
    setTimeout(() => {
      alertDiv.remove();
    }, 3000); // 3000ms = 3 seconds
  }




    // Add new user
    userForm.addEventListener("submit", async (e) => {
      e.preventDefault();
      const firstname = document.getElementById("firstname").value;
      const lastname = document.getElementById("lastname").value;
      const email = document.getElementById("email").value;
      const pwd = document.getElementById("pwd").value;
      const status = "teacher";

      await fetch("/users/add", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ firstname,lastname, email,pwd,status }),
      });
      showCustomAlert("Add User successfully");
      fetchUsers();
    });

    // Update user
    async function updateUser(id, firstname,lastname, email,pwd) {
      const newName = prompt("Enter new firstname:", firstname);
      const newLName = prompt("Enter new lastname:", lastname);
      const newEmail = prompt("Enter new email:", email);
      const newpass = prompt("Enter new password:", pwd);
      if (newName && newLName && newEmail && newpass) {
        await fetch(`/users/update/${id}`, {
          method: "PUT",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ firstname: newName, lastname:newLName, email: newEmail,pwd:newpass }),
        });
        fetchUsers();
      }
    }

    // Delete user
    async function deleteUser(id) {
      if (confirm("Are you sure to delete this user?")) {
        await fetch(`/users/delete/${id}`, {
          method: "DELETE",
        });
        fetchUsers();
      }
    }

    // Initial load
    fetchUsers();
  </script>
  <script src="js/bootstrap.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
</body>

</html>