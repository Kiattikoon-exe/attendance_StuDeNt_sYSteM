<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content />
    <meta name="author" content />
    <title>Modern Business - Start Bootstrap Template</title>
    <!-- Favicon-->
    <link rel="icon" type="image/x-icon" href="assets/favicon.ico" />
    <!-- Custom Google font-->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
        href="https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@100;200;300;400;500;600;700;800;900&amp;display=swap"
        rel="stylesheet" />
    <!-- Bootstrap icons-->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css" rel="stylesheet" />
    <!-- Core theme CSS (includes Bootstrap)-->
    <link href="css/styles.css" rel="stylesheet" />

    <style>
        .dashboard-buttons {
            display: grid;
            grid-template-columns: repeat(3);
            gap: 1rem;
            margin-top: 1rem;
        }

        .dashboard-button {
            padding: 2rem;
            font-size: 1rem;
            text-align: center;
            background-color: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 0.25rem;
            transition: all 0.2s ease-in-out;
            text-decoration: none;
            color: #212529;
        }

        .dashboard-button:hover {
            background-color: #e9ecef;
            cursor: pointer;
        }

        .table-responsive {
            height: 450px;
            /* Adjust the height as needed */
            overflow-y: scroll;
        }

        .scrollable {
            height: 240px;
            overflow-y: scroll;
        }
    </style>

</head>

<body class="d-flex flex-column">
    <main class="flex-shrink-0">


        <!-- HEADER TEACHER INCLUDE -->
        <%- include('include/headerTc.ejs') %>

            <section class="py-lg-1">
                <div class="px-5">
                    <div class="bg-light rounded-4 py-5 px-5 px-md-5" id="login-form">
                        <div class="text-center mb-2">

                            <h1 class="fw-bolder">Roll-Call Management</h1>
                            <p class="lead fw-normal text-muted mb-0">
                                <%= teacherName %>
                                    <%= teacherName%> | <a href="/logout">Logout</a>
                            </p>
                        </div>

                        <div class="row gx-7 justify-content-center">
                            <!-- left -->
                            <div class=" col-xl-2">
                                <!-- <h2 class="section-header">Manage Section</h2> -->
                                <!-- <form action="/addSection" method="POST">
                  <div class="mb-3 mt-lg-4">
                    <div class="text-lg-start ">เพิ่มกลุ่มเรียน</div>
                    <input type="text" class="form-control " id="section" name="section" required />
                  </div>
                  <button type="submit" class="btn btn-primary">Add Section</button>
                </form> -->

                                <h2 class="mt-0 mb-4">Section List</h2>
                                <ul class="list-group scrollable" id="section-list">
                                    <% sections.forEach(section=> { %>
                                        <li class="list-group-item d-flex justify-content-between align-items-center"
                                            data-section-id="<%= section.id %>">
                                            Section: <%= section.section %>
                                                <form action="/deleteSection" method="POST" class="float-end">
                                                    <input type="hidden" name="id" value="<%= section.id %>" />
                                                    <!-- <button type="submit" class="btn btn-danger btn-sm">Delete</button> -->
                                                </form>
                                        </li>
                                        <% }) %>
                                </ul>
                            </div>
                            <!-- right-->
                            <div class=" col-xl-10">
                                <h2 class="section-header">รายชื่อนักศึกษา</h2>
                                <div class="row">
                                    <div class="col-6">
                                        <div class="text-lg-start mb-1 m-3">
                                            <select id="section-select" name="section">
                                                <option value="">เลือกกลุ่มเรียน</option>
                                                <% sections.forEach(section=> { %>
                                                    <option value="<%= section.section %>">
                                                        <%= section.section %>
                                                    </option>
                                                    <% }) %>
                                            </select>

                                            <!-- Add date and time pickers -->
                                            <input type="date" id="attendance-date" class="mx-2" required>
                                            <input type="time" id="attendance-time" class="mx-2" required>
                                            <button type="submit" id="add-rollcall-btn">บันทึกการเช็คชื่อ</button>
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="text-lg-end mb-1 m-3">
                                            <select id="search-type">
                                                <option value="">All</option>
                                                <option value="id">ID</option>
                                                <option value="name">Name</option>
                                                <option value="curriculum">Curriculum</option>
                                                <option value="section">Section</option>
                                            </select>
                                            <input type="search" id="student-search"
                                                placeholder=" <<<<<<<    Search by ">
                                            <button type="submit" id="search-button">Search</button>
                                        </div>
                                    </div>
                                </div>


                                <div class="container-fluid mx-auto mt-1 ">
                                    <div class="table-responsive">
                                        <table class="table  table-hover">
                                            <thead>
                                                <tr>
                                                <tr>
                                                    <th><input type="checkbox" id="select-all"></th>
                                                    <th>กลุ่มเรียน</th>
                                                    <th>Student ID</th>
                                                    <th>Name</th>
                                                    <th>Curriculum</th>
                                                    <th>สถานะ</th>
                                                </tr>
                                            </thead>
                                            <tbody>

                                            </tbody>
                                            <tbody id="student-data">
                                                <% students.forEach(student=> { %>
                                                    <tr>
                                                        <td><input type="checkbox" class="student-checkbox"
                                                                data-student-id="<%= student.id %>"></td>

                                                        <td>
                                                            <%= sections.find(section=> section.id ===
                                                                studentList.find(list => list.student_id ===
                                                                student.id)?.section_id)?.section || 'N/A' %>
                                                        </td>
                                                        <td>
                                                            <%= prefixes.find(prefix=> prefix.id ===
                                                                student.prefix_id)?.prefix %>
                                                        </td>

                                                        <td>
                                                            <%= student.firstname %>
                                                                <%= student.lastname %>
                                                        </td>
                                                        <td>
                                                            <%= curriculums.find(curriculum=> curriculum.id ===
                                                                student.curriculum_id)?.curr_name_en %>
                                                        </td>
                                                        <td>
                                                            <div class="btn-group" role="group">
                                                                <input type="radio" class="btn-check"
                                                                    name="status_<%= student.id %>"
                                                                    id="present_<%= student.id %>" value="เข้าเรียน"
                                                                    autocomplete="off">
                                                                <label class="btn btn-outline-success"
                                                                    for="present_<%= student.id %>">เข้าเรียน</label>

                                                                <input type="radio" class="btn-check"
                                                                    name="status_<%= student.id %>"
                                                                    id="late_<%= student.id %>" value="สาย"
                                                                    autocomplete="off">
                                                                <label class="btn btn-outline-warning"
                                                                    for="late_<%= student.id %>">สาย</label>

                                                                <input type="radio" class="btn-check"
                                                                    name="status_<%= student.id %>"
                                                                    id="leave_<%= student.id %>" value="ลา"
                                                                    autocomplete="off">
                                                                <label class="btn btn-outline-info"
                                                                    for="leave_<%= student.id %>">ลา</label>

                                                                <input type="radio" class="btn-check"
                                                                    name="status_<%= student.id %>"
                                                                    id="absent_<%= student.id %>" value="ขาด"
                                                                    autocomplete="off">
                                                                <label class="btn btn-outline-danger"
                                                                    for="absent_<%= student.id %>">ขาด</label>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                    <% }); %>
                                            </tbody>

                                        </table>
                                    </div>

                                </div>


                            </div>
                        </div>

                    </div>


                     


            </section>
    </main>

    <!-- FOOTER INCLUDE -->
    <%- include('footer.ejs') %>
        <script>
            document.addEventListener('DOMContentLoaded', function () {






                // Set default date and time to the current date and time
                const now = new Date();
                document.getElementById('attendance-date').valueAsDate = now;
                document.getElementById('attendance-time').value = now.toTimeString().slice(0, 5);

                // Handle radio button uncheck (for attendance status radio buttons)
                document.querySelectorAll('.btn-check').forEach(radio => {
                    radio.addEventListener('click', function (e) {
                        if (this.classList.contains('active')) {
                            setTimeout(() => {
                                this.checked = false;
                                this.classList.remove('active');
                            }, 0);
                        }
                    });
                });

                // Modify the section change handler
                document.getElementById('section-select').addEventListener('change', function () {
                    const selectedSectionId = this.value;
                    fetch(`/searchStudents?type=section&term=${selectedSectionId}`)
                        .then(response => response.json())
                        .then(data => {
                            const tableBody = document.getElementById('student-data');
                            tableBody.innerHTML = ''; // Clear previous results

                            // Get unique students
                            const uniqueStudents = getUniqueStudents(data);

                            if (uniqueStudents.length === 0) {
                                tableBody.innerHTML = '<tr><td colspan="9" class="text-center">No students found</td></tr>';
                            } else {
                                uniqueStudents.forEach(student => {
                                    tableBody.innerHTML += `
                            <tr>
                                <td><input type="checkbox" class="student-checkbox" data-student-id="${student.id}"></td>
                                <td>${student.section || 'N/A'}</td>
                                <td>${student.prefix}</td>
                                <td>${student.firstname} ${student.lastname}</td>
                                <td>${student.curriculum}</td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <input type="radio" class="btn-check" name="status_${student.id}" id="present_${student.id}" value="เข้าเรียน" autocomplete="off">
                                        <label class="btn btn-outline-success" for="present_${student.id}">เข้าเรียน</label>
                                        
                                        <input type="radio" class="btn-check" name="status_${student.id}" id="late_${student.id}" value="สาย" autocomplete="off">
                                        <label class="btn btn-outline-warning" for="late_${student.id}">สาย</label>
                                        
                                        <input type="radio" class="btn-check" name="status_${student.id}" id="leave_${student.id}" value="ลา" autocomplete="off">
                                        <label class="btn btn-outline-info" for="leave_${student.id}">ลา</label>

                                        <input type="radio" class="btn-check" name="status_${student.id}" id="absent_${student.id}" value="ขาด" autocomplete="off">
                                        <label class="btn btn-outline-danger" for="absent_${student.id}">ขาด</label>
                                    </div>
                                </td>
                            </tr>
                        `;
                                });
                            }

                            // Re-bind event listeners
                            bindUpdateEventListeners();
                            bindDeleteEventListeners();
                        })
                        .catch(error => {
                            console.error('Error fetching students:', error);
                        });
                });

                  // Modify the search handler similarly
    document.getElementById('search-button').addEventListener('click', function () {
        const searchTerm = document.getElementById('student-search').value;
        const searchType = document.getElementById('search-type').value;

        fetch(`/searchStudents?term=${searchTerm}&type=${searchType}`)
            .then(response => response.json())
            .then(data => {
                const tableBody = document.getElementById('student-data');
                tableBody.innerHTML = '';
                
                // Get unique students
                const uniqueStudents = getUniqueStudents(data);

                if (uniqueStudents.length === 0) {
                    tableBody.innerHTML = '<tr><td colspan="9" class="text-center">No students found</td></tr>';
                } else {
                    uniqueStudents.forEach(student => {
                        // Same table row HTML as above
                        tableBody.innerHTML += `
                            <tr>
                                <td><input type="checkbox" class="student-checkbox" data-student-id="${student.id}"></td>
                                <td>${student.section || 'N/A'}</td>
                                <td>${student.prefix}</td>
                                <td>${student.firstname} ${student.lastname}</td>
                                <td>${student.curriculum}</td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <input type="radio" class="btn-check" name="status_${student.id}" id="present_${student.id}" value="เข้าเรียน" autocomplete="off">
                                        <label class="btn btn-outline-success" for="present_${student.id}">เข้าเรียน</label>
                                        
                                        <input type="radio" class="btn-check" name="status_${student.id}" id="late_${student.id}" value="สาย" autocomplete="off">
                                        <label class="btn btn-outline-warning" for="late_${student.id}">สาย</label>
                                        
                                        <input type="radio" class="btn-check" name="status_${student.id}" id="leave_${student.id}" value="ลา" autocomplete="off">
                                        <label class="btn btn-outline-info" for="leave_${student.id}">ลา</label>

                                        <input type="radio" class="btn-check" name="status_${student.id}" id="absent_${student.id}" value="ขาด" autocomplete="off">
                                        <label class="btn btn-outline-danger" for="absent_${student.id}">ขาด</label>
                                    </div>
                                </td>
                            </tr>
                        `;
                    });
                }
                
                // Re-bind event listeners
                bindUpdateEventListeners();
                bindDeleteEventListeners();
            })
            .catch(error => {
                console.error('Error fetching students:', error);
            });
    });

                // Function to bind update buttons after search results are updated
                function bindUpdateEventListeners() {
                    document.querySelectorAll('.update-student-btn').forEach(button => {
                        button.addEventListener('click', async function (event) {
                            // Handle update logic here (omitted for brevity)
                        });
                    });
                }

                // Function to bind delete buttons after search results are updated
                function bindDeleteEventListeners() {
                    document.querySelectorAll('.delete-student-btn').forEach(button => {
                        button.addEventListener('click', async function (event) {
                            // Handle delete logic here (omitted for brevity)
                        });
                    });
                }
                bindUpdateEventListeners();
                bindDeleteEventListeners();

                // Update the save attendance click handler
                document.getElementById('add-rollcall-btn').addEventListener('click', async function () {
                    const attendanceDate = document.getElementById('attendance-date').value;
                    const attendanceTime = document.getElementById('attendance-time').value;

                    if (!attendanceDate || !attendanceTime) {
                        Swal.fire({
                            title: "แจ้งเตือน",
                            text: "กรุณากรอกวันที่และเวลา",
                            icon: "warning"
                        });
                        return;
                    }

                    // Collect attendance data with section information
                    const attendanceData = [];
                    document.querySelectorAll('.student-checkbox:checked').forEach(checkbox => {
                        const row = checkbox.closest('tr');
                        const studentId = checkbox.getAttribute('data-student-id');
                        const section = row.querySelector('td:nth-child(2)').textContent.trim(); // Get section from the row
                        const statusRadios = document.querySelectorAll(`input[name="status_${studentId}"]`);
                        const selectedStatus = Array.from(statusRadios).find(radio => radio.checked)?.value;

                        if (selectedStatus) {
                            attendanceData.push({
                                studentId: parseInt(studentId),
                                section: section,
                                status: selectedStatus
                            });
                        }
                    });

                    if (attendanceData.length === 0) {
                        Swal.fire({
                            title: "แจ้งเตือน",
                            text: "กรุณาเลือกนักศึกษาและระบุสถานะอย่างน้อย 1 คน",
                            icon: "warning"
                        });
                        return;
                    }

                    try {
                        const response = await fetch('/saveAttendance', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                attendanceDate,
                                attendanceTime,
                                attendanceData
                            })
                        });

                        const data = await response.json();

                        if (data.success) {
                            Swal.fire({
                                title: "สำเร็จ",
                                text: "บันทึกการเช็คชื่อเรียบร้อยแล้ว",
                                icon: "success"
                            }).then(() => {
                                window.location.reload();
                            });
                        } else {
                            throw new Error(data.message || 'Failed to save attendance');
                        }
                    } catch (error) {
                        Swal.fire({
                            title: "เกิดข้อผิดพลาด",
                            text: error.message,
                            icon: "error"
                        });
                    }
                });

                // Add select all functionality
                document.getElementById('select-all').addEventListener('change', function () {
                    const checkboxes = document.querySelectorAll('.student-checkbox');
                    checkboxes.forEach(checkbox => {
                        checkbox.checked = this.checked;
                    });
                });
            });
            // Add this function to remove duplicates while preserving attendance history
            function getUniqueStudents(students) {
                const uniqueStudents = new Map();

                students.forEach(student => {
                    // Use student ID as the key to prevent duplicates
                    if (!uniqueStudents.has(student.id)) {
                        uniqueStudents.set(student.id, student);
                    }
                });

                return Array.from(uniqueStudents.values());
            }
        </script>

        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script src="js/user-management.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
            crossorigin="anonymous"></script>
</body>

</html>